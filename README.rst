Mass Gathering Detective System
==================================================

**Author:** Yicheng Qian, Huan Le, Hung Do, Kevin Kong
--------------------------------------------------------

The idea of this system is to detect if a mass gathering exists in a room. In the past, people wore masks. However, the number of new coronavirus cases continues to increase rapidly. We do not believe that large gatherings of people will remain inappropriate until the Coronavirus has completely disappeared. So we came up with the idea and tried to build it. The beauty of this system is that it could be applied to any square room for controlling the number of people in a room. The design could be added to a modern home security system since it is more powerful compared to the entry sensors a home security system normally has.

General Ideas on Building a System with Multiple Subsystems
------------------------------------------------------------

The system consists of several important features to function correctly. The system will have a subsystem that detects the number of people in a room, a subsystem that calculates the size of a room, and a method to make several subsystems communicate with each other(share data with each other). Those statistics that are generated by each subsystem are correlated to determine if the mass gathering exists.

* Humidity and Temperature may be too hard to measure and those measurements take time to change just a little, so it is hard to capture and might not be that useful.
* Another good idea is to use a CO2 sensor to see if a huge activity is held in a room and many people are participating. I do not know if this way is efficient or not.

Counting People in a Room
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Our initial thought is to use two ultrasonic/IR sensors, one is outside the room, and another is inside the room. If the one outside the room finds the person first, then the person is entering the room. Otherwise, the person is exiting the room. This is probably the easiest part. We will firstly tackle this system.

This system will also have an alarm which we used a buzzer. It is mainly used to warn the person who is entering if the room is full. 


Calculating the Size of a Room
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Ultrasonic might not be able to detect distances over 8 meters. 
The idea is to place the system in the corner of a room, and it can measure the width and length of a room and then calculate the size of the room. We can use two laser sensors or we can rotate just one to measure the size of a room.

If we are going to use rotation, we should think about how to mount the sensor to the servo motor so that they can rotate together. We finally take this approach because the laser sensor is expensive. We should consider how we mount the sensor onto the servo motor.

The occupancy load is calculated by dividing the area of a room by its prescribed unit of area per person. We could define the unit of area per person by following an appropriate social distancing. This unit of area can be changed remotely through Bluetooth by sending from our android app.

Sharing Data through Multiple Subsystems
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
For communication among several systems, there are a few ways to do it. It can be done through a radio frequency module, WiFi module, or Bluetooth module.

Choice 1: Multiple Arduinos/RPIs communicate with each other using nRF. We can use various types of communication modules like Bluetooth module, nRF24L01, etc. For our problem, we can effectively use nRF. And we can set which one is the parent and which all are children. A single unit can receive from 6 other modules and vice versa.

With the following two choices, we can possibly build a Web App to monitor data if we have time.

Choice 2: ESP8266 WiFi module 

Choice 3: Bluno Bee BLE Bluetooth module (We will take this approach, it looks like this module has a larger range). With this approach, the two main systems could communicate with each other. We also hope we can use our phones to send data to the room size measure system to change the setting(such as the unit of area). Imagine in a low-risk area, we could decrease the unit of area to increase the occupancy load so that we could have more people in a room. 

Additionally, another reason that we chose the Bluno Bee BLE Bluetooth module is it is convenient for us to use the android app to interact with our system. With control through our phones, the system will be more flexible and practical for most use cases in real life.


Cost
---------------------------------

* Arduino Uno Rev3 x 2
.. image:: https://user-images.githubusercontent.com/49627097/164304644-23d2083f-320e-40b3-a21d-a33689346269.png

* Sharp GP2Y0A21YK0F GP2Y0A21 80 cm Infrared Proximity Sensor x 2: $18 (two used for calculating the number of people in a room)
* HC-SR04 Ultrasonic Sensor x 2: $7 (an alternative sensor for calculating the number of people in a room)
.. image:: https://user-images.githubusercontent.com/49627097/164748483-f57d8a09-bea0-42bc-b47f-67e7228d708b.png

* Infrared Laser Distance Sensor (50m / 80m) x 1: $70 https://www.dfrobot.com/product-2108.html
.. image:: https://user-images.githubusercontent.com/49627097/164748717-592919fc-c974-4cf8-b2da-a3e831aa9a94.png

* Servo motor x 1 (We should already have more than 1)
.. image:: https://user-images.githubusercontent.com/49627097/164306819-92269ce9-d78f-42f6-b478-8baf12f9ebf8.png


* Bluno Bee - Turn Arduino to a Bluetooth 4.0 (BLE) Ready Board x 2: $20 https://www.dfrobot.com/product-1073.html
.. image:: https://user-images.githubusercontent.com/49627097/164308721-75185f47-e391-4fec-a84c-9d5f3b85da1a.jpg


* Gravity: IO Expansion Shield for Arduino V7.1 x 2: $20 https://www.dfrobot.com/product-1009.html
.. image:: https://user-images.githubusercontent.com/49627097/164308274-5398b236-aff7-42ad-905e-b2f7830e683a.jpg

* Battery Holder 4xAA Barrel Connector for Arduino x 2: $10
.. image:: https://user-images.githubusercontent.com/49627097/164749468-e1a9e573-f251-4991-9665-65ae53406f5a.png

* AA Battery(16): $14
.. image:: https://user-images.githubusercontent.com/49627097/164749477-d36308c4-5b33-4ac9-8ef4-8fc3231e885a.png

* Piezo Buzzer x 2: $9
.. image:: https://user-images.githubusercontent.com/49627097/164306158-79896cbf-09d6-48b1-9da6-1d660bf76c31.png

* Jumper Wires
.. image:: https://user-images.githubusercontent.com/49627097/164306114-581aaf47-cdf7-462b-9973-6d57cd752de1.png



Circuit/Wiring Diagram
---------------------------------

Room Measurement
~~~~~~~~~~~~~~~~

.. image:: https://user-images.githubusercontent.com/98708375/167048748-8d324f42-c839-445f-9121-78314edb5263.png
  :width: 600

People Counter
~~~~~~~~~~~~~~

.. image:: https://user-images.githubusercontent.com/98708375/167000703-3edbf8be-f9ea-4f9d-a6e0-232cabd388b4.png
  :width: 600

Physical Design
---------------------------------

We did not realize we could use the marker space to print cases for our design. We thus were not able to use the 3D-printing technology for making the whole system more aesthetic. We considered these two subsystems will be put into two special made boxes. Ultrasonic sensors and laser distance sensors work through holes on boxes. So we just used cardboard for our system. It is shown below.

Room Measurement
~~~~~~~~~~~~~~~~~~~

.. image:: https://user-images.githubusercontent.com/49627097/166264268-f2c5fcaa-1171-42fd-8fe0-d44ac62186d8.jpg

.. image:: https://user-images.githubusercontent.com/49627097/166264277-03015df5-bf4c-465b-b956-845befe8ef38.jpg

People Counter
~~~~~~~~~~~~~~~

.. image:: https://user-images.githubusercontent.com/49627097/166264289-4e6eb0f3-bfa5-4c3d-b21a-0b23b3a8c546.jpg


Implementation
---------------------------------

Room Measurement
~~~~~~~~~~~~~~~~~~~
The room measurer uses an infrared laser distance sensor. It is a cost-effective infrared laser range sensor, featuring high accuracy, long-range detection, visible infrared laser, and a small field of view. Indoor 0.05~80m, outdoor 0.05~50m. We used this with a servo motor to measure the size of a room. With such a laser distance sensor that has such a long range, the system can be adapted to any square room. However, the laser distance sensor's accuracy might be affected by room temperature or ambient light. Those special environmental conditions have not been tested for this project.

People Counter
~~~~~~~~~~~~~~~
The people counter uses two ultrasonic sensors to sense whether a person is entering a room or exiting a room. In this way, the system knows how many people are present in a room. It is specifically designed for the lab room, but it can be modified to be more adaptive. The ultrasonic sensors' thresholds are manually set for the lab room. so theoretically the system can take in values from the central hub which is our phone to change the threshold setting. The people counter also takes in the room size from our phone once the room size has been measured. Then the limit of people can be calculated on the system if the user manually sets the capacity per person. Finally, if the number of people in the room goes over the limit, the buzzer will start a high-pitched sound. Normally, Buzzer works, too. There are different short, slight sounds when people enter and leave a room.

Android App
~~~~~~~~~~~~
The Android app serves as the central hub of this system. It has a scan button to scan all devices around that have Bluetooth on. It helps us connect to our subsystems. Only one subsystem can be connected at a time. The Send Data button is used to send data to our subsystems(all subsystems are configured as child nodes which means the two subsystems cannot communicate with each other). The Android app also has a text field for inputting the message or data that we want to pass to our subsystems. The message could be the query message which asks for the updated status of a subsystem or a data message which sets up a subsystem(setting limit). The Received data area will display the messages that come from two subsystems. This Android app works as a central hub that allows users to control and monitor the entire system.

.. image:: https://user-images.githubusercontent.com/64414323/167525725-01c10086-8a27-479b-9a3d-385d048c4c41.jpg
  :width: 350

Demo
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The youtube video is recorded on the demo day on Thursday, May 5.

- Demo how the system works: https://youtu.be/T28fpxAF_44
- Demo of the system interfacing with an android phone: https://www.youtube.com/watch?v=cxvbJ1gWcLI


Thoughts/Challenges and Actual Time Use
----------------------------------------

This design is done by using 6 weeks' lab time and additional time aside from the regular lab hour. We literally worked the whole day every Thursday. We could not give a specific number of hours here, but it should exceed 60 hours of work for sure. For the first several weeks, we were spending most of our time knowing how to use the shield. The shield has program and code modes and thus we were not knowing how to successfully upload the program to the board, and the strange thing is this is actually not mentioned on the product page. The program can only be uploaded to the board when the shield is in program mode.

.. image:: https://github.com/dotranquochung/Room-Population-Controller/blob/main/plan.png

The most challenging situation we have is working on the Android App. First of all, we found the Android code provided on Github. We tried many ways to make it work.

- Attempt 1: Import the Android project into Android Studio
We had problems with the Gradle Scripts and the version of the Gradle. Since the file created by the developed team of the chip is considered a long time ago, the version of the Gradle is no longer compatible with the current Android Studio.

- Attempt 2: Import the Android project into Eclipse
We had problems with downloading SPK packages/ managing SPK packages. It took a large amount of time for downloading but the errors kept coming although we believe we have solved the errors.

- Attempt 3: Redo the Android project with Android Studio
Lastly, we have to create a new Android project and try to remake the original project developed by the DFRobot team. 

The people counter is also somehow time-consuming. We spent a lot of time trying to get workable threshold values for the lab room.

Reference
-----------
Laser Distance Sensor: https://www.dfrobot.com/product-2108.html

Gravity: IO Expansion Shield for Arduino V7.1: https://www.dfrobot.com/product-1009.html

Bluno Bee - Turn Arduino to a Bluetooth 4.0 (BLE) Ready Board: https://www.dfrobot.com/product-1073.html
